name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
    tags:        
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

env:
  RELEASE_REGEX: ^release-(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)$

jobs:
  changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      run-ci: ${{ github.event_name == 'workflow_dispatch' || steps.ci-files-changed.outputs.paths_any_modified == 'true' || startsWith(github.ref, 'refs/tags/release-') }}
      release-bump: ${{ github.ref == 'refs/heads/main' && env.COMMIT_IS_TAGGED != 'true' }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: audit
        allowed-endpoints: >
          github.com:443

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Check for Tag
      run: |
        if git describe --contains "$GITHUB_SHA"; then
          echo 'COMMIT_IS_TAGGED=true' >> "$GITHUB_ENV";
        else
          echo 'COMMIT_IS_TAGGED=false' >> "$GITHUB_ENV";
        fi

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: CI Files Changed
      id: ci-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/cicd.yml"

  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.run-ci == 'true' }}
    strategy:
      matrix:
        script: ["bundle", "check-types", "lint", "test"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: audit
    
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Validate Compose File
      run: docker compose --file compose.yml config --quiet
    
    - name: Run ${{ matrix.script }}
      env:
        SCRIPT: ${{ matrix.script }}
      run: |
        ./npm -- clean-install
        ./npm -- run "$SCRIPT"

    - name: Store Bundle Artifacts
      if: ${{ matrix.script == 'bundle' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: bundle
        path: dist/
        if-no-files-found: error

  release-bump:
    name: Tag for Release
    runs-on: ubuntu-latest
    needs: [changed-files, ci]
    concurrency:
      group: release-bump

    if: ${{ needs.changed-files.outputs.release-bump == 'true' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Get Preceding Release Tag
        run: echo 'this is where we run preceding-tag-action'

      - name: Increment Tag
        id: increment-tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PRECEDING_RELEASE_TAG: ${{ env.PRECEDING_RELEASE_TAG }}
          RELEASE_REGEX: ${{ env.RELEASE_REGEX }}
        with:
          script: |
            core.info(`LATEST_RELEASE_TAG: ${process.env.LATEST_RELEASE_TAG}`);
            core.info(`RELEASE_REGEX: ${process.env.RELEASE_REGEX}`);
            const regexp = new RegExp(process.env.RELEASE_REGEX);
            const groups = "release-1.2.3".match(regexp).groups;

            // Convert string to number
            Object.keys(groups).forEach((key) => {
              let value = groups[key];
              let parsedValue = parseFloat(value);
              if (parsedValue.toString() === value) groups[key] = parsedValue;
            });

            core.info("input: release-1.2.3");
            core.info(`output: release-${groups.major}.${groups.minor}.${groups.patch + 1}`);

      - name: Create Release Tag
        run: echo 'Create release-1.2.3 tag'

  pre-release:
    name: Pre-Release
    runs-on: ubuntu-latest
    needs: ci
    concurrency:
      group: pre-release-${{ github.ref }}

    if: ${{ startsWith(github.ref, 'refs/tags/release-') }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      
      - name: Tag Check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_REF: ${{ env.GITHUB_REF }}
        with:
          script: |
            const vTag = process.env.GITHUB_REF.replace("refs/tags/release-", "refs/tags/v");
            return github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: vTag
            }).then((response) => {
              throw new Error(`Tag exists: ${vTag}`);
            }).catch((e) => {
              if (e != null && e.status !== 404) throw e;
            });

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Download Bundle Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: bundle
          path: dist/

      - name: Create Release Commit
        run: echo 'Create a release commit of just the action.yml and the bundle.'
        # https://github.com/JasonEtco/build-and-tag-action/blob/main/src/lib/create-commit.ts

      - name: Create Release Commit
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_REF: ${{ env.GITHUB_REF }}
        with:
          script: |
            import { readFile } from "fs/promises";
            const package = JSON.parse(await readFile("package.json", "utf8"));
            const tree = await github.rest.git.createTree({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tree: [
                {
                  path: "action.yml",
                  mode: "100644",
                  type: "blob",
                  content: await readFile("action.yml", "utf8")
                },
                {
                  path: package.main,
                  mode: "100644",
                  type: "blob",
                  content: await readFile(package.main, "utf8")
                }
              ]
            });

            const commit = await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ...
              })

      - name: Tag Release
        run: echo 'Tag the release commit with v*.*.*, triggering a release in a new workflow.'