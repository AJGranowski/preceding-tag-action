name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      run-ci: ${{ github.event_name == 'workflow_dispatch' || steps.ci-files-changed.outputs.paths_any_modified == 'true' }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          github.com:443

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: CI Files Changed
      id: ci-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/cicd.yml"

  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.run-ci == 'true' }}
    strategy:
      matrix:
        script: ["bundle", "check-types", "lint", "test"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: allow
    
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Validate Compose File
      run: docker compose --file compose.yml config --quiet
    
    - name: Run ${{ matrix.script }}
      env:
        SCRIPT: ${{ matrix.script }}
      run: |
        ./npm -- clean-install
        ./npm -- run "$SCRIPT"

    - name: Store Bundle Artifacts
      if: ${{ matrix.script == 'bundle' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: bundle
        path: dist/
        if-no-files-found: error