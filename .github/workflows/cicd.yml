name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
      - "!v**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  workflow-filter:
    name: Workflow Filter
    runs-on: ubuntu-latest
    outputs:
      run-ci: ${{ (github.event_name == 'workflow_dispatch' || github.ref_type == 'tag' || steps.ci-files-changed.outputs.paths_any_modified == 'true') && !startsWith(github.ref, 'refs/tags/v') }}
      run-check-release-files: ${{ github.ref == 'refs/heads/main' && steps.tag-check.outputs.is-commit-tagged != 'true' && steps.commit-comment.outputs.skip-auto-release != 'true' && steps.release-source-files-changed.outputs.paths_any_modified == 'true' }}
      latest-release-tag: ${{ steps.latest-release-tag.outputs.tag }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          github.com:443

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Check for Tag
      id: tag-check
      run: |
        if git describe --contains "$GITHUB_SHA"; then
          echo 'is-commit-tagged=true' >> "$GITHUB_OUTPUT";
        else
          echo 'is-commit-tagged=false' >> "$GITHUB_OUTPUT";
        fi

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: CI Files Changed
      id: ci-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/cicd.yml"
            - ".github/workflows/integration-tests.yml"
            - ".github/workflows/regression-tests.yml"

    - name: Check for \#skip-auto-release
      id: commit-comment
      run: |
        case "$(git show -s --format=%b "$GITHUB_REF")" in
          *#skip-auto-release*) echo 'skip-auto-release=true' >> "$GITHUB_OUTPUT";;
        esac

    - name: Release Source Files Changed
      id: release-source-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "cjs-shim.mjs"
            - "esbuild.config.mjs"
            - "package.json"
            - "src/**"

    - name: Get Latest Release Tag
      id: latest-release-tag
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        script: |
          core.setOutput("tag", await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          }).then((response) => {
            return response.data.tag_name
          }).catch((e) => {
            if (e != null && e.status !== 404) return "";
          }));

  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: workflow-filter
    if: ${{ needs.workflow-filter.outputs.run-ci == 'true' }}
    strategy:
      matrix:
        script: ["bundle", "check-types", "lint", "test"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          auth.docker.io:443
          coveralls.io:443
          dl-cdn.alpinelinux.org:443
          github.com:443
          production.cloudflare.docker.com:443
          registry-1.docker.io:443
          registry.npmjs.org:443
          release-assets.githubusercontent.com:443
    
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Validate Compose File
      run: docker compose --file compose.yml config --quiet

    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
    - name: Set up Docker CLI
      id: setup-buildx-action
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      with:
        name: ci

    - name: Docker Cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: /tmp/buildkit-cache
        key: buildkit-${{ runner.os }}-${{ hashFiles('./container-images/**') }}

    - name: Build Docker images
      uses: docker/bake-action@3acf805d94d93a86cce4ca44798a76464a75b88c # v6.9.0
      with:
        allow: |
          network.host
        builder: ${{ steps.setup-buildx-action.outputs.name }}
        load: true
        set: |
          *.cache-from=type=local,src=/tmp/buildkit-cache
          *.cache-to=type=local,dest=/tmp/buildkit-cache,mode=max

    - name: NPM Cache
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: "~/.npm"
        key: npm-${{ runner.os }}-${{ hashFiles('./package-lock.json') }}
    
    - name: Run ${{ matrix.script }}
      env:
        SCRIPT: ${{ matrix.script }}
      run: |
        ./npm -- clean-install
        ./npm -- run "$SCRIPT"

    - name: Upload Coverage
      if: ${{ matrix.script == 'test' }}
      uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6

    - name: Store Bundled Artifacts
      if: ${{ matrix.script == 'bundle' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: bundle
        path: |
          dist/
          action.yml
        if-no-files-found: error

  fuzz-tests:
    name: Fuzz Tests
    needs: workflow-filter
    if: ${{ needs.workflow-filter.outputs.run-ci == 'true' && !(github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/release-')) }}
    uses: ./.github/workflows/fuzz-tests.yml

  ci-integration-tests:
    name: Integration Tests
    needs: ci
    uses: ./.github/workflows/integration-tests.yml

  ci-regression-tests:
    name: Regression Tests
    needs: ci
    uses: ./.github/workflows/regression-tests.yml

  ci-required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [ci, ci-integration-tests]
    if: always()
    steps:
    - run: ${{ !contains(needs.*.result, 'failure') }}

  check-release-files:
    name: Check Release File Changes
    runs-on: ubuntu-latest
    needs: [workflow-filter, ci]
    outputs:
      changed: ${{ steps.latest-release.outputs.action-hash == steps.bundle.outputs.action-hash && steps.latest-release.outputs.bundle-hash != steps.bundle.outputs.bundle-hash }}

    if: ${{ github.ref == 'refs/heads/main' && needs.workflow-filter.outputs.run-check-release-files == 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          github.com:443

    - name: Checkout Latest Release
      if: ${{ needs.workflow-filter.outputs.latest-release-tag != '' }}
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ needs.workflow-filter.outputs.latest-release-tag }}

    - name: Hash Latest Release
      id: latest-release
      run: |
        echo 'bundle-hash=${{ hashFiles('./dist/**') }}' >> "$GITHUB_OUTPUT"
        echo 'action-hash=${{ hashFiles('./action.yml') }}' >> "$GITHUB_OUTPUT"

    - name: Download Bundled Artifacts
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: bundle
        path: ./

    - name: Hash Bundle
      id: bundle
      run: |
        echo 'bundle-hash=${{ hashFiles('./dist/**') }}' >> "$GITHUB_OUTPUT"
        echo 'action-hash=${{ hashFiles('./action.yml') }}' >> "$GITHUB_OUTPUT"

  release-bump:
    name: Bump Release Tag
    runs-on: ubuntu-latest
    needs: [check-release-files, ci, ci-integration-tests, ci-regression-tests, ci-required-checks]
    concurrency:
      group: release-bump
    environment: release-ruleset-bypass
    env:
      RELEASE_REGEX: ^release-(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)$

    if: ${{ github.ref == 'refs/heads/main' && needs.check-release-files.outputs.changed == 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443

    - name: Generate Elevated Workflow token
      uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
      id: release-ruleset-bypass-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Get Preceding Release Tag
      id: preceding-tag
      uses: AJGranowski/preceding-tag-action@a90eecea5a5d3cc69e04d6357ce271dc65c9436e # v1.0.1
      with:
        regex: ${{ env.RELEASE_REGEX }}

    - name: Increment And Create Release Tag
      id: increment-tag
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        PRECEDING_RELEASE_TAG: ${{ steps.preceding-tag.outputs.tag }}
        RELEASE_REGEX: ${{ env.RELEASE_REGEX }}
      with:
        github-token: ${{ steps.release-ruleset-bypass-token.outputs.token }}
        script: |
          core.info(`PRECEDING_RELEASE_TAG: ${process.env.PRECEDING_RELEASE_TAG}`);
          core.info(`RELEASE_REGEX: ${process.env.RELEASE_REGEX}`);
          const regexp = new RegExp(process.env.RELEASE_REGEX);
          const groups = process.env.PRECEDING_RELEASE_TAG.match(regexp).groups;

          // Convert string to number
          Object.keys(groups).forEach((key) => {
            let value = groups[key];
            let parsedValue = parseFloat(value);
            if (parsedValue.toString() === value) groups[key] = parsedValue;
          });

          const bumpedTag = `release-${groups.major}.${groups.minor}.${groups.patch + 1}`;
          if (!regexp.test(bumpedTag)) {
            throw new Error(`Bumped tag does not match RELEASE_REGEX "${bumpedTag}"`)
          }

          const bumpedRef = `refs/tags/${bumpedTag}`;

          await github.rest.git.getRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: bumpedRef
          }).then((response) => {
            throw new Error(`Tag already exists: ${bumpedRef}`);
          }).catch((e) => {
            if (e != null && e.status !== 404) throw e;
          });

          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: bumpedRef,
            sha: process.env.GITHUB_SHA
          });

          core.info(`Created tag: ${bumpedRef}`);

  pre-release:
    name: Pre-Release
    runs-on: ubuntu-latest
    needs: [workflow-filter, ci, ci-integration-tests, ci-required-checks]
    concurrency:
      group: release-${{ github.ref }}
    environment: release-ruleset-bypass
    outputs:
      version-tag: ${{ steps.create-version-tag.outputs.tag }}

    if: ${{ startsWith(github.ref, 'refs/tags/release-') && needs.workflow-filter.outputs.run-release-bump != 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          github.com:443

    - name: Generate Elevated Workflow token
      uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
      id: release-ruleset-bypass-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
    
    - name: Create Version Tag
      id: create-version-tag
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        GITHUB_REF: ${{ env.GITHUB_REF }}
        GITHUB_SHA: ${{ env.GITHUB_SHA }}
      with:
        github-token: ${{ steps.release-ruleset-bypass-token.outputs.token }}
        script: |
          const vTag = process.env.GITHUB_REF.replace("refs/tags/release-", "refs/tags/v");
          await github.rest.git.getRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: vTag
          }).then((response) => {
            throw new Error(`Tag already exists: ${vTag}`);
          }).catch((e) => {
            if (e != null && e.status !== 404) throw e;
          });

          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: vTag,
            sha: process.env.GITHUB_SHA
          });

          core.setOutput("tag", vTag.substring("refs/tags/".length));

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    
    - name: Download Bundled Artifacts
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: bundle
        path: ./

    - name: Create and Tag Release Commit
      uses: JasonEtco/build-and-tag-action@dd5e4991048c325f6d85b4155e586fc211c644da # v2.0.1
      env:
        GITHUB_TOKEN: ${{ steps.release-ruleset-bypass-token.outputs.token }}
      with:
        tag_name: ${{ steps.create-version-tag.outputs.tag }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [pre-release, workflow-filter]
    permissions:
      contents: write # Needed to create a release https://docs.github.com/en/rest/releases/releases#create-a-release
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true

    if: ${{ startsWith(github.ref, 'refs/tags/release-') }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          github.com:443

    - name: Compare Against Latest Release
      id: is-latest-release
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        LATEST_RELEASE_TAG: ${{ needs.workflow-filter.outputs.latest-release-tag }}
        THIS_RELEASE_TAG: ${{ needs.pre-release.outputs.version-tag }}
      with:
        script: |
          const result = (() => {
            const toVersionArray = (str) => str.split(/[^\d]+/).filter((x) => parseInt(x).toString() === x).map((x) => parseInt(x));
            const thisReleaseTag = toVersionArray(process.env.THIS_RELEASE_TAG);
            core.info(`This Release Tag Components: ${JSON.stringify(thisReleaseTag)}`);
            const latestReleaseTag = toVersionArray(process.env.LATEST_RELEASE_TAG);
            core.info(`Latest Release Tag Components: ${JSON.stringify(latestReleaseTag)}`);

            const minLength = Math.min(thisReleaseTag.length, latestReleaseTag.length);
            for (let i = 0; i < minLength; i++) {
              const difference = thisReleaseTag[i] - latestReleaseTag[i];
              if (difference > 0) return true;
              if (difference < 0) return false;
            }
            if (thisReleaseTag.length >= latestReleaseTag.length) return true;
            return false;
          })();

          core.info(`Result: ${result}`);
          core.setOutput("is-latest", result);

    - name: Get Parent Commit
      id: parent-commit
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        script: |
          const parentSHA = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: process.env.GITHUB_SHA!,
              page: 1,
              per_page: 1
          }).then((response) => {
              return response.data.parents[0].sha;
          });

          core.setOutput("sha", parentSHA);

    - name: Get Preceding Release Tag Of Parent Commit
      id: preceding-release-tag
      uses: AJGranowski/preceding-tag-action@a90eecea5a5d3cc69e04d6357ce271dc65c9436e # v1.0.1
      with:
        ref: ${{ steps.parent-commit.outputs.sha }}
        regex: ${{ env.RELEASE_REGEX }}

    - name: Create Release
      uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
      with:
        body: ⚠️ This release is largely untested, use at your own risk. ⚠️
        draft: true
        generateReleaseNotes: true
        generateReleaseNotesPreviousTag: ${{ steps.preceding-release-tag.outputs.tag }}
        immutableCreate: true
        makeLatest: ${{ steps.is-latest-release.outputs.is-latest == 'true' }}
        name: Release ${{ needs.pre-release.outputs.version-tag }}
        tag: ${{ needs.pre-release.outputs.version-tag }}