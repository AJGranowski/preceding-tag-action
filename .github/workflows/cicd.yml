name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
    tags:        
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  workflow-filter:
    name: Workflow Filter
    runs-on: ubuntu-latest
    outputs:
      run-ci: ${{ (github.event_name == 'workflow_dispatch' || github.ref_type == 'tag' || steps.ci-files-changed.outputs.paths_any_modified == 'true') && !startsWith(github.ref, 'refs/tags/v') }}
      run-release-bump: ${{ github.ref == 'refs/heads/main' && env.COMMIT_IS_TAGGED != 'true' && env.SKIP_AUTO_RELEASE != 'true' && steps.release-source-files-changed.outputs.paths_any_modified == 'true' }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: audit
        allowed-endpoints: >
          github.com:443

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Check for Tag
      run: |
        if git describe --contains "$GITHUB_SHA"; then
          echo 'COMMIT_IS_TAGGED=true' >> "$GITHUB_ENV";
        else
          echo 'COMMIT_IS_TAGGED=false' >> "$GITHUB_ENV";
        fi

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: CI Files Changed
      id: ci-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/cicd.yml"
            - ".github/workflows/integration-tests.yml"
            - ".github/workflows/regression-tests.yml"

    - name: Check for \#skip-auto-release
      run: |
        case "$(git show -s --format=%b "$GITHUB_REF")" in
          *#skip-auto-release*) echo 'SKIP_AUTO_RELEASE=true' >> "$GITHUB_ENV";;
        esac

    - name: Release Source Files Changed
      id: release-source-files-changed
      if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
      uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
      with:
        files_yaml: |
          paths:
            - "action.yml"
            - "cjs-shim.mjs"
            - "esbuild.config.mjs"
            - "package.json"
            - "src/**"

  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: workflow-filter
    if: ${{ needs.workflow-filter.outputs.run-ci == 'true' }}
    strategy:
      matrix:
        script: ["bundle", "check-types", "lint", "test"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        disable-sudo: true
        egress-policy: audit
    
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Validate Compose File
      run: docker compose --file compose.yml config --quiet

    # https://docs.docker.com/build/ci/github-actions/cache/#github-cache
    - name: Set up Docker CLI
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Build Docker images
      uses: docker/bake-action@3acf805d94d93a86cce4ca44798a76464a75b88c # v6.9.0
      with:
        allow: |
          network.host
        load: true
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

    - name: NPM Cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: "~/.npm"
        key: npm-${{ runner.os }}-${{ hashFiles('./package-lock.json') }}
    
    - name: Run ${{ matrix.script }}
      env:
        SCRIPT: ${{ matrix.script }}
      run: |
        ./npm -- clean-install
        ./npm -- run "$SCRIPT"

    - name: Store Bundle Artifacts
      if: ${{ matrix.script == 'bundle' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: bundle
        path: dist/
        if-no-files-found: error

  ci-integration-tests:
    name: CI (Integration Tests)
    needs: ci
    uses: ./.github/workflows/integration-tests.yml

  ci-regression-tests:
    name: CI (Regression Tests)
    needs: ci
    uses: ./.github/workflows/regression-tests.yml

  release-bump:
    name: Bump Release Tag
    runs-on: ubuntu-latest
    needs: [workflow-filter, ci, ci-integration-tests, ci-regression-tests]
    concurrency:
      group: release-bump
    environment: release-ruleset-bypass
    env:
      RELEASE_REGEX: ^release-(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)$

    if: ${{ github.ref == 'refs/heads/main' && needs.workflow-filter.outputs.run-release-bump == 'true' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Generate Elevated Workflow token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: release-ruleset-bypass-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get Preceding Release Tag
        id: preceding-tag
        uses: AJGranowski/preceding-tag-action@59d4a22a2e0f1d2d044eedc1cbc101e0ec6ac106 # v0.0.2
        with:
          filter: ${{ env.RELEASE_REGEX }}

      - name: Increment And Create Release Tag
        id: increment-tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PRECEDING_RELEASE_TAG: ${{ steps.preceding-tag.outputs.tag }}
          RELEASE_REGEX: ${{ env.RELEASE_REGEX }}
        with:
          github-token: ${{ steps.release-ruleset-bypass-token.outputs.token }}
          script: |
            core.info(`PRECEDING_RELEASE_TAG: ${process.env.PRECEDING_RELEASE_TAG}`);
            core.info(`RELEASE_REGEX: ${process.env.RELEASE_REGEX}`);
            const regexp = new RegExp(process.env.RELEASE_REGEX);
            const groups = process.env.PRECEDING_RELEASE_TAG.match(regexp).groups;

            // Convert string to number
            Object.keys(groups).forEach((key) => {
              let value = groups[key];
              let parsedValue = parseFloat(value);
              if (parsedValue.toString() === value) groups[key] = parsedValue;
            });

            const bumpedTag = `release-${groups.major}.${groups.minor}.${groups.patch + 1}`;
            if (!regexp.test(bumpedTag)) {
              throw new Error(`Bumped tag does not match RELEASE_REGEX "${bumpedTag}"`)
            }

            const bumpedRef = `refs/tags/${bumpedTag}`;

            await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: bumpedRef
            }).then((response) => {
              throw new Error(`Tag already exists: ${bumpedRef}`);
            }).catch((e) => {
              if (e != null && e.status !== 404) throw e;
            });

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: bumpedRef,
              sha: process.env.GITHUB_SHA
            });

            core.info(`Created tag: ${bumpedRef}`);

  pre-release:
    name: Pre-Release
    runs-on: ubuntu-latest
    needs: [workflow-filter, ci, ci-integration-tests, ci-regression-tests]
    concurrency:
      group: release-${{ github.ref }}
    environment: release-ruleset-bypass
    outputs:
      version-tag: ${{ fromJson(steps.create-version-tag.outputs.result) }}

    if: ${{ startsWith(github.ref, 'refs/tags/release-') && needs.workflow-filter.outputs.run-release-bump != 'true' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Generate Elevated Workflow token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: release-ruleset-bypass-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      
      - name: Create Version Tag
        id: create-version-tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_REF: ${{ env.GITHUB_REF }}
          GITHUB_SHA: ${{ env.GITHUB_SHA }}
        with:
          github-token: ${{ steps.release-ruleset-bypass-token.outputs.token }}
          script: |
            const vTag = process.env.GITHUB_REF.replace("refs/tags/release-", "refs/tags/v");
            await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: vTag
            }).then((response) => {
              throw new Error(`Tag already exists: ${vTag}`);
            }).catch((e) => {
              if (e != null && e.status !== 404) throw e;
            });

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: vTag,
              sha: process.env.GITHUB_SHA
            });

            return vTag.substring("refs/tags/".length);

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Download Bundle Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: bundle
          path: dist/

      - name: Create and Tag Release Commit
        uses: JasonEtco/build-and-tag-action@dd5e4991048c325f6d85b4155e586fc211c644da # v2.0.1
        env:
          GITHUB_TOKEN: ${{ steps.release-ruleset-bypass-token.outputs.token }}
        with:
          tag_name: ${{ fromJson(steps.create-version-tag.outputs.result) }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: pre-release
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true

    if: ${{ startsWith(github.ref, 'refs/tags/release-') }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        disable-sudo: true
        egress-policy: audit

    - name: Create Release
      run: echo 'Create a release using the ${{ needs.pre-release.outputs.version-tag }} tag.'